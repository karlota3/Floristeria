CREATE DATABASE flores;
USE flores;

CREATE TABLE IF NOT EXISTS `CLIENTE` (
  `idCLIENTE` INT AUTO_INCREMENT,
  `CLIENTE_NOMBRE` VARCHAR(45),
  `CLIENTE_APE_PAT` VARCHAR(45),
  `CLIENTE_APE_MAT` VARCHAR(45),
  `CLIENTE_CORREO` VARCHAR(100),
  `SEXO` TINYINT(1),
  PRIMARY KEY (`idCLIENTE`));

CREATE TABLE IF NOT EXISTS `PROVEEDORES` (
  `idPROVEEDORES` INT AUTO_INCREMENT,
  `PROVEEDORES_NOMBRE` VARCHAR(45),
  `PROVEEDORES_APE_PAT` VARCHAR(45),
  `PROVEEDORES_COMPAÃ‘IA` VARCHAR(45),
  `PROVEEDORES_FECHA` DATE,
  `PROVEEDORES_MONTO` DECIMAL(10, 2),
  PRIMARY KEY (`idPROVEEDORES`));

CREATE TABLE IF NOT EXISTS `STOCK` (
  `idSTOCK` INT AUTO_INCREMENT,
  `STOCK_CANTIDAD` INT,
  `STOCK_TIPO` VARCHAR(45),
  `STOCK_ESTILO` VARCHAR(45),
  `STOCK_TEMPORADA` VARCHAR(45),
  `PROVEEDORES_idPROVEEDORES` INT,
  PRIMARY KEY (`idSTOCK`),
  INDEX `fk_STOCK_PROVEEDORES1_idx` (`PROVEEDORES_idPROVEEDORES`),
  CONSTRAINT `fk_STOCK_PROVEEDORES1`
    FOREIGN KEY (`PROVEEDORES_idPROVEEDORES`)
    REFERENCES `PROVEEDORES` (`idPROVEEDORES`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE IF NOT EXISTS `CANT_PRODUCTO` (
  `idCANT_PRODUCTO` INT AUTO_INCREMENT,
  `CANT_PRODUCTO_NOMBRE` VARCHAR(45),
  `CANT_PRODUCTO_TIPO` VARCHAR(45),
  `CANT_PRODUCTO_PRECIO` DECIMAL(10, 2),
  `STOCK_idSTOCK` INT,
  PRIMARY KEY (`idCANT_PRODUCTO`),
  INDEX `fk_CANT_PRODUCTO_STOCK1_idx` (`STOCK_idSTOCK`),
  CONSTRAINT `fk_CANT_PRODUCTO_STOCK1`
    FOREIGN KEY (`STOCK_idSTOCK`)
    REFERENCES `STOCK` (`idSTOCK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE IF NOT EXISTS `CAJERO` (
  `idCAJERO` INT AUTO_INCREMENT,
  `CAJERO_NOMBRE` VARCHAR(45),
  `CAJERO_APE_PAT` VARCHAR(45),
  PRIMARY KEY (`idCAJERO`))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `VENTA` (
  `idVENTA` INT AUTO_INCREMENT,
  `VENTA_MONTO` DECIMAL(10, 2),
  `CLIENTE_idCLIENTE` INT,
  `CAJERO_idCAJERO` INT,
  PRIMARY KEY (`idVENTA`),
  INDEX `fk_VENTA_CLIENTE_idx` (`CLIENTE_idCLIENTE`),
  INDEX `fk_VENTA_CAJERO1_idx` (`CAJERO_idCAJERO`),
  CONSTRAINT `fk_VENTA_CLIENTE`
    FOREIGN KEY (`CLIENTE_idCLIENTE`)
    REFERENCES `CLIENTE` (`idCLIENTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_VENTA_CAJERO1`
    FOREIGN KEY (`CAJERO_idCAJERO`)
    REFERENCES `CAJERO` (`idCAJERO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE IF NOT EXISTS `CANT_PRODUCTO_has_VENTA` (
  `CANT_PRODUCTO_idCANT_PRODUCTO` INT,
  `CANT_PRODUCTO_STOCK_idSTOCK` INT,
  `VENTA_idVENTA` INT,
  `VENTA_CLIENTE_idCLIENTE` INT,
  PRIMARY KEY (`CANT_PRODUCTO_idCANT_PRODUCTO`, `CANT_PRODUCTO_STOCK_idSTOCK`, `VENTA_idVENTA`, `VENTA_CLIENTE_idCLIENTE`),
  INDEX `fk_CANT_PRODUCTO_has_VENTA_VENTA1_idx` (`VENTA_idVENTA`, `VENTA_CLIENTE_idCLIENTE`),
  INDEX `fk_CANT_PRODUCTO_has_VENTA_CANT_PRODUCTO1_idx` (`CANT_PRODUCTO_idCANT_PRODUCTO`, `CANT_PRODUCTO_STOCK_idSTOCK`),
  CONSTRAINT `fk_CANT_PRODUCTO_has_VENTA_CANT_PRODUCTO1`
    FOREIGN KEY (`CANT_PRODUCTO_idCANT_PRODUCTO`, `CANT_PRODUCTO_STOCK_idSTOCK`)
    REFERENCES `CANT_PRODUCTO` (`idCANT_PRODUCTO`, `STOCK_idSTOCK`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CANT_PRODUCTO_has_VENTA_VENTA1`
    FOREIGN KEY (`VENTA_idVENTA`, `VENTA_CLIENTE_idCLIENTE`)
    REFERENCES `VENTA` (`idVENTA`, `CLIENTE_idCLIENTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
